[
  {
    "objectID": "overview.html",
    "href": "overview.html",
    "title": "Overview",
    "section": "",
    "text": "Supporting Information (in review)\n\n\n\nThis site provides a demonstrative workflow and supporting information for the publication:\nMechanistic Insights into the 2014-2015 Vesicular Stomatitis Outbreak in the United States: A SEIR-SEI Compartmental Model Analysis\nAuthors:\nHumphreys, Pelzel-McCluskey, Shults, Velazquez Salinas, Bertram, McGregor, Cohnstaedt, Swanson, Scroggs, Peters, and Rodriguez\nAn interactive dashboard to demonstrate the described SEIR-SEI model is available: ShinyApps site: https://geoepi.shinyapps.io/seir-vector/\nAll code and data are available for download:\nGitHub site: https://github.com/geoepi/seir-vector\nAdditional supporting information and documents available on the Open Science Framework:\nProject OSF site: TBD"
  },
  {
    "objectID": "overview.html#needed-libraries",
    "href": "overview.html#needed-libraries",
    "title": "Overview",
    "section": "Needed Libraries",
    "text": "Needed Libraries\n\n\nHide code\nlibrary(here) # to manage directories\nlibrary(tidyverse) # data wrangling\nlibrary(ggdist) # visualizations\nlibrary(rstan) # interface with Stan from R\nrstan_options(auto_write = TRUE) # options\noptions(mc.cores = parallel::detectCores())\n\nlibrary(cmdstanr)\ncheck_cmdstan_toolchain(fix = TRUE, quiet = TRUE)\nregister_knitr_engine()\n\n# custom functions\nsource(here(\"./R/utilities.R\"))\nsource_dir(\"./R\")"
  },
  {
    "objectID": "overview.html#observed-incidence",
    "href": "overview.html#observed-incidence",
    "title": "Overview",
    "section": "Observed Incidence",
    "text": "Observed Incidence\nObserved incidence data is loaded and visualized.\n\n\nHide code\ntruth_df <- readRDS(here(\"assets/vsv_ind_truth.rds\")) %>%\n  filter(year == 2014)\n\nstr(truth_df)\n\n\n'data.frame':   117 obs. of  5 variables:\n $ date : Date, format: \"2014-05-18\" \"2014-05-29\" ...\n $ count: int  4 1 1 1 2 1 1 2 4 1 ...\n $ susc : int  65 3 3 5 4 1 11 79 7 6 ...\n $ year : num  2014 2014 2014 2014 2014 ...\n $ doy  : num  138 149 150 158 159 163 166 174 184 188 ...\n\n\n\n\nHide code\nplot_incidence(truth_df)\n\n\n\n\n\nFigure 1: Observed VS incidence 2014."
  },
  {
    "objectID": "overview.html#formula",
    "href": "overview.html#formula",
    "title": "Overview",
    "section": "Formula",
    "text": "Formula\nModel Parameters:\n\\begin{align}\n    \\lambda_h &= \\upsilon_h \\cdot \\beta_h \\cdot \\frac{I_v}{N_v} \\\\\n    \\lambda_v &= \\upsilon_v \\cdot \\beta_v \\cdot \\frac{I_h}{N_h} \\\\\n    \\frac{dS_h}{dt} &= -\\lambda_h \\cdot S_h \\\\\n    \\frac{dE_h}{dt} &=  \\lambda_h \\cdot S_h - \\sigma_h \\cdot E_h \\\\\n    \\frac{dI_h}{dt} &= \\sigma_h \\cdot E_h \\cdot \\rho_h - \\gamma_h \\cdot I_h \\\\\n    \\frac{dR_h}{dt} &=  \\gamma_h \\cdot I_h  \\\\ \\nonumber\n    \\frac{dS_v}{dt} &= \\mu_v \\cdot N_v - \\lambda_v \\cdot S_v - \\mu_v \\cdot S_v \\\\\n    \\frac{dE_v}{dt} &= \\lambda_v \\cdot S_v - (\\sigma_v + \\mu_v) \\cdot E_v \\\\\n    \\frac{dI_v}{dt} &=  \\sigma_v \\cdot E_v \\cdot \\rho_v - \\mu_v \\cdot I_v \\\\ \\nonumber\n\\end{align}"
  },
  {
    "objectID": "overview.html#exploratory-model",
    "href": "overview.html#exploratory-model",
    "title": "Overview",
    "section": "Exploratory Model",
    "text": "Exploratory Model\nBefore coding a Stan model, exploring parameters through construction of a relatively simple Ordinary Differential Equations (ODE) model using the deSolve package.\n\nParameter Values\n\n\nHide code\ninitial_parameters <- \n  c(\n    beta_h = 0.95,\n    gamma_h = 0.10,\n    sigma_h = 0.25,\n    sigma_v = 0.4,\n    rho_h = 0.3,\n    rho_v = 0.85,\n    beta_v =0.85,\n    mu_v = 0.1,\n    upsilon_h = 0.6,\n    upsilon_v = 0.35,\n    kappa = 0.30\n  )\n\n\n\n\nInitial Conditions\n\n\nHide code\nN_h <- sum(truth_df$count) + sum(truth_df$susc)\nEh <- 0\nIh <- 1\nN_v <- 300*N_h\nEv <- 0\nIv <- 1\n\ninitial_conditions <- \n  c(\n    Eh = Eh,\n    Ih = Ih,\n    Sh = N_h - Eh - Ih,\n    Rh = 0,\n    Ev = Ev,\n    Iv = Iv,\n    Sv = N_v - Iv - Ev\n  )\n\n\n\n\nODE Function\n\n\nHide code\nseirsei_ode <- function(t, state, parameters) {\n  with(as.list(c(state, parameters)), {\n    \n    lambda_h = upsilon_h * beta_h * Iv / N_v\n    lambda_v = upsilon_v * beta_v * Ih / N_h\n    \n    dSh = -lambda_h * Sh\n    dEh = lambda_h * Sh - sigma_h * Eh\n    dIh = sigma_h * Eh*rho_h - gamma_h * Ih\n    dRh = gamma_h * Ih\n    dSv = mu_v * N_v - lambda_v * Sv - mu_v * Sv\n    dEv = lambda_v * Sv - (sigma_v + mu_v) * Ev\n    dIv = sigma_v * Ev*rho_v - mu_v * Iv\n    \n    return(list(c(dSh, dEh, dIh, dRh, dSv, dEv, dIv)))\n  })\n}\n\n\n\n\nRun ODE Model\n\n\nHide code\nout <- as.data.frame(\n  ode(y = initial_conditions, times = times, func = seirsei_ode, parms = initial_parameters)\n)\n\n\n\n\nPlot Results"
  },
  {
    "objectID": "overview.html#stan-model",
    "href": "overview.html#stan-model",
    "title": "Overview",
    "section": "Stan Model",
    "text": "Stan Model\n\nNegBinomial Sampling\nSampling from NegBinonial… \\begin{align} \\nonumber\n    \\text{Y}_{t}|\\theta &\\sim \\text{NegBinomial}(\\text{Y}|\\Delta\\text{I}_{t}\\kappa, \\phi) \\\\ \\nonumber\n    \\theta &= \\{\\upsilon_h,\\upsilon_v, \\beta_h, \\beta_v, \\sigma_h, \\sigma_v, \\gamma_h, \\mu, \\rho, \\kappa\\} \\\\ \\nonumber\n    \\upsilon_h &\\sim \\text{Lognormal}(log(0.25), 0.1) \\\\ \\nonumber\n    \\upsilon_v &\\sim \\text{Lognormal}(log(0.15), 0.1) \\\\ \\nonumber\n    \\beta_h &\\sim \\text{Beta}(10, 1) \\\\ \\nonumber\n    \\beta_v &\\sim \\text{Beta}(1, 10) \\\\\n    \\sigma_h &\\sim \\text{Lognormal}(log(0.15), 0.1) \\\\ \\nonumber\n    \\sigma_v &\\sim \\text{Lognormal}(log(0.3), 0.1) \\\\ \\nonumber\n    \\rho_h &\\sim \\text{Beta}(10, 100) \\\\ \\nonumber\n    \\rho_v &\\sim \\text{Beta}(5, 10) \\\\ \\nonumber\n    \\gamma_h &\\sim \\text{Lognormal}(log(0.085), 0.1) \\\\ \\nonumber\n    \\mu &\\sim \\text{Lognormal}(log(0.1), 0.1) \\\\ \\nonumber\n    \\kappa &\\sim \\text{Beta}(5, 10) \\\\ \\nonumber\n    {1}/{\\phi} &\\sim \\text{Exponential}(2) \\\\ \\nonumber\n\\end{align}\n\n\nStan Code\nfunctions {\n  real[] seirsei(real t, real[] y, real[] theta, \n             real[] x_r, int[] x_i) {\n\n      real N_h = x_i[1];\n     \n      real beta_h = theta[1];\n      real gamma_h = theta[2];\n      real sigma_h = theta[3];\n      real sigma_v = theta[4];\n      real rho_h = theta[5];\n      real rho_v = theta[6];\n      real beta_v = theta[7];\n      real mu_v = theta[8];\n      real upsilon_h = theta[9];\n      real upsilon_v = theta[10];\n      real i_0 = theta[11];\n      real e_0 = theta[12];\n      real ev_0 = theta[13];\n      real iv_0 = theta[14];\n      real N_v = theta[15];\n      \n      real init[7] = {N_h - i_0 - e_0, e_0, i_0, 0, N_v - iv_0 - ev_0, ev_0, iv_0}; \n      real Sh = y[1] + init[1];\n      real Eh = y[2] + init[2];\n      real Ih = y[3] + init[3];\n      real Rh = y[4] + init[4];\n      real Sv = y[5] + init[5];\n      real Ev = y[6] + init[6];\n      real Iv = y[7] + init[7];\n      \n      real lambda_h = upsilon_h * beta_h * Iv / N_v;\n      real lambda_v = upsilon_v * beta_v * Ih / N_h;\n      \n      real dS_dt = -lambda_h * Sh;\n      real dE_dt =  lambda_h * Sh - sigma_h * Eh;\n      real dI_dt = sigma_h * Eh*rho_h - gamma_h * Ih;\n      real dR_dt =  gamma_h * Ih;\n      \n      real dSv_dt = mu_v*N_v - lambda_v*Sv - mu_v*Sv;\n      real dEv_dt = lambda_v*Sv - (sigma_v + mu_v)*Ev;\n      real dIv_dt =  sigma_v * Ev*rho_v - mu_v*Iv;\n     \n      return {dS_dt, dE_dt, dI_dt, dR_dt, dSv_dt, dEv_dt, dIv_dt};\n  }\n}\ndata {\n  int<lower=1> n_days;\n  real t0;\n  real ts[n_days];\n  int N_h;\n  int N_v;\n  int cases[n_days];\n}\ntransformed data {\n  real x_r[0];\n  int x_i[1] = { N_h };\n}\nparameters {\n  real<lower=0, upper=1> beta_h;\n  real<lower=0> gamma_h;\n  real<lower=0> sigma_h;\n  real<lower=0> sigma_v;\n  real<lower=0, upper=1> rho_h;\n  real<lower=0, upper=1> rho_v;\n  real<lower=0, upper=1> beta_v;\n  real<lower=0> mu_v;\n  real<lower=0> upsilon_h;\n  real<lower=0> upsilon_v;\n  real<lower=0> phi_inv;\n  real<lower=0, upper=1> kappa;\n  real<lower=0> i_0; \n  real<lower=0> e_0; \n  real<lower=0> ev_0; \n  real<lower=0> iv_0; \n}\ntransformed parameters{\n  real y[n_days, 7];\n  real incidence[n_days - 1];\n  real phi = 1. / phi_inv;\n  real theta[15] = {beta_h, gamma_h, sigma_h, sigma_v, rho_h, rho_v, beta_v, mu_v, upsilon_h, upsilon_v, i_0, e_0, ev_0, iv_0, N_v};\n  y = integrate_ode_rk45(seirsei, rep_array(0.0, 7), t0, ts, theta, x_r, x_i);\n  for (i in 1:n_days-1){\n    incidence[i] = -(y[i+1, 2] - y[i, 2] + y[i+1, 1] - y[i, 1])*kappa + 1e-8;\n  }\n}\nmodel {\n  beta_h ~ beta(10, 1);\n  gamma_h ~ lognormal(log(0.15), 0.1);  \n  sigma_h ~ lognormal(log(0.17), 0.1);\n  sigma_v ~ lognormal(log(0.3), 0.1);\n  rho_h ~ beta(10, 100);\n  rho_v ~ beta(5, 10); \n  beta_v ~ beta(1, 10);\n  mu_v ~ lognormal(log(0.1), 0.1);\n  upsilon_h ~ lognormal(log(0.25), 0.1);\n  upsilon_v ~ lognormal(log(0.15), 0.1);\n  phi_inv ~ exponential(2);\n  kappa ~ beta(15, 100);\n  i_0 ~ lognormal(0, 0.1);\n  e_0 ~ lognormal(0, 0.1);\n  ev_0 ~ lognormal(0, 0.1);\n  iv_0 ~ lognormal(0, 0.1);\n\n  cases[1:(n_days-1)] ~ neg_binomial_2(incidence, phi);\n}\ngenerated quantities {\n  real duration = 1 / gamma_h;\n  real incub_h = 1 / sigma_h;\n  real incub_v = 1/ sigma_v;\n  real log_lik[n_days-1];\n  real pred_infected[n_days-1];\n  \n  pred_infected = neg_binomial_2_rng(incidence, phi);\n  \n  for (i in 1:(n_days - 1)) {\n    log_lik[i] = neg_binomial_2_lpmf(cases[i] | incidence[i], phi);\n  }\n}"
  },
  {
    "objectID": "overview.html#prior-predictive",
    "href": "overview.html#prior-predictive",
    "title": "Overview",
    "section": "Prior Predictive",
    "text": "Prior Predictive"
  }
]